/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.awt.event.ActionEvent;
import java.sql.*;
import java.time.LocalDateTime;
import java.util.EventObject;

/**
 *
 * @author dharavathyuvaraj
 */
public class Billing extends javax.swing.JFrame {

    /**
     * Creates new form Billing
     */
    DefaultTableModel tableModel;
    public Billing()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        textField1 = new java.awt.TextField();
        label3 = new java.awt.Label();
        textField2 = new java.awt.TextField();
        jSeparator2 = new javax.swing.JSeparator();
        label4 = new java.awt.Label();
        label5 = new java.awt.Label();
        textField3 = new java.awt.TextField();
        label6 = new java.awt.Label();
        textField4 = new java.awt.TextField();
        label7 = new java.awt.Label();
        textField5 = new java.awt.TextField();
        label8 = new java.awt.Label();
        textField6 = new java.awt.TextField();
        jSeparator3 = new javax.swing.JSeparator();
        button1 = new java.awt.Button();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableModel = new DefaultTableModel();
        jTable1 = new javax.swing.JTable(tableModel);
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jTextField2 = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(150, 100));

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 36)); // NOI18N
        jLabel1.setText("Billing");

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("Date");

        jLabel3.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel3.setText(String.valueOf(java.time.LocalDate.now()));

        jLabel4.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel4.setText("Time");

        jLabel5.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel5.setText(String.valueOf(java.time.LocalTime.now()));

        label1.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        label1.setText("Customer Details");

        label2.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        label2.setText("Name");

        label3.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        label3.setText("Contact No");

        label4.setFont(new java.awt.Font("Lucida Grande", 1, 18)); // NOI18N
        label4.setText("Product Details");

        label5.setText("Product ID");

        label6.setText("Product Name");

        label7.setText("Weight");

        label8.setText("Price");

        textField6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                textField6ActionPerformed(evt);
                System.out.println("WOW");
            }
        });

        button1.setFont(new java.awt.Font("Lucida Grande", 1, 14)); // NOI18N
        button1.setLabel("Add");
        button1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    button1ActionPerformed(evt);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        });


//        jTable1.setModel(new javax.swing.table.DefaultTableModel(
//            new Object [][] {
//                {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//                    {null, null, null, null, null,null,null},
//            },
//            new String [] {
//                "S.no", "Product Id", "Product Name","Weight" , "Quantity", "Price", "Total"
//            }
//        ));
        tableModel.addColumn("S.no");
        tableModel.addColumn("Product Id");
        tableModel.addColumn("Product Name");
        tableModel.addColumn("Weight");
        tableModel.addColumn("Quantity");
        tableModel.addColumn("Price");
        tableModel.addColumn("Total");
        tableModel.insertRow(0,new Object[] {null, null, null, null, null, null, null});
        tableModel.insertRow(1,new Object[] {null, null, null, null, null, null, null});
        jScrollPane1.setViewportView(jTable1);

        jLabel6.setFont(new java.awt.Font("Helvetica Neue", 1, 18)); // NOI18N
        jLabel6.setText("Calculation Details");

        jLabel7.setText("Total Amount");

        jLabel8.setText("Amount Paid");

        jLabel9.setText("Amount Returned");

        jTextField1.setText("");

        jTextField2.setText("");

        jTextField3.setText("");

        jButton1.setText("Save");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                try {
                    jButton1ActionPerformed(evt);
                } catch (SQLException e) {
                    e.printStackTrace();
                }
            }
        });
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jButton3.setText("Close");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(291, 291, 291)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(104, 104, 104)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel5))
                .addGap(134, 134, 134))
            .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(jSeparator2, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(95, 95, 95)
                        .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(84, 84, 84)
                        .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(56, 56, 56)
                        .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(79, 79, 79)
                                .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(54, 54, 54)
                                .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(40, 40, 40)
                                .addComponent(textField4, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(83, 83, 83)
                                .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(36, 36, 36)
                                .addComponent(textField5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(60, 60, 60)
                                .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(textField6, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(55, 55, 55))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 737, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(78, 78, 78)
                                .addComponent(jSeparator3))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(33, 33, 33)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel7)
                                            .addComponent(jLabel8)
                                            .addComponent(jLabel9))
                                        .addGap(28, 28, 28)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                            .addComponent(jTextField2)
                                            .addComponent(jTextField3))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jButton1, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING))))))))
                .addGap(19, 19, 19))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addComponent(jLabel1)))
                .addGap(13, 13, 13)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(label3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(button1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(label4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(label5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textField5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(label8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(textField6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(7, 7, 7)
                                        .addComponent(jLabel6)
                                        .addGap(33, 33, 33)
                                        .addComponent(jLabel7))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton1)))
                                .addGap(23, 23, 23)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel8)
                                    .addComponent(jTextField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jButton2))
                                .addGap(21, 21, 21)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel9)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jButton3))))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(ActionEvent evt) {
        jLabel3.setText(String.valueOf(java.time.LocalDate.now()));
        jLabel5.setText(String.valueOf(java.time.LocalTime.now()));
        int a= JOptionPane.showConfirmDialog(null, "Do you really want to close the window", "Select", JOptionPane.YES_NO_OPTION);
        if(a==0){
            System.exit(0);
        }
    }

    private void jButton2ActionPerformed(ActionEvent evt) {
        jLabel3.setText(String.valueOf(java.time.LocalDate.now()));
        jLabel5.setText(String.valueOf(java.time.LocalTime.now()));
        textField1.setText("");
        textField2.setText("");
        textField3.setText("");
        textField4.setText("");
        textField5.setText("");
        textField6.setText("");
        jTextField1.setText("");
        jTextField2.setText("");
        jTextField3.setText("");
        tableModel.setRowCount(0);
        tableModel.insertRow(0,new Object[] {null, null, null, null, null, null, null});

//        int row = 0,col;
//        while(jTable1.getValueAt(row,0)!=null){
//            col = 0;
//            while(col<5){
//                jTable1.setValueAt("",row,col);
//                col++;
//            }
//            row++;
//        }
    }
    private String determinePrice(String pID) throws SQLException {
        jLabel3.setText(String.valueOf(java.time.LocalDate.now()));
        jLabel5.setText(String.valueOf(java.time.LocalTime.now()));
        String query ="SELECT * FROM price_history WHERE productid ="+pID+" ORDER BY sno DESC LIMIT 1";
        String pPrice="";
        String DB_URL = "jdbc:mysql://localhost:3306/data1";
         String USER = "root";
         String PASS = "ssneeraj23";
         Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
         Statement stmt = conn.createStatement();
        ResultSet resultSet = stmt.executeQuery(query);
        if(resultSet.next()){
            pPrice = resultSet.getString("selling_price");
        }
        else{
            query = "SELECT * FROM product_data WHERE id = "+pID;
            resultSet = stmt.executeQuery(query);
            if(resultSet.next()){
                pPrice = resultSet.getString("unit_price");
            }else{
                JOptionPane.showMessageDialog(this,"Product price is not present");
            }
        }


        resultSet.close();
        stmt.close();
        conn.close();

        return pPrice;
    }
    private void button1ActionPerformed(ActionEvent evt) throws SQLException {

        jLabel3.setText(String.valueOf(java.time.LocalDate.now()));
        jLabel5.setText(String.valueOf(java.time.LocalTime.now()));
        String pName = textField1.getText();
        String pContactNo = textField2.getText();
        String pID = textField3.getText();
        String pProductName = textField4.getText();
        String pWeight = textField5.getText();
        String pQuantity;
        String pPrice = textField6.getText();

        if(textField1.getText().equals("")||textField1.getText().length()>=30||textField1.getText().matches(".*[0-9].*")){

            JOptionPane.showMessageDialog(this, "Enter correct customer name");

        }
        else if(textField2.getText().equals("")||textField2.getText().length()!=10||textField2.getText().matches(".*[a-z].*")||textField2.getText().matches(".*[A-Z].*")||textField2.getText().startsWith("0")){

            JOptionPane.showMessageDialog(this, "Enter a valid 10 digit Contact Number");

        }
        else if(textField3.getText().equals("")||textField3.getText().matches(".*[a-z].*")){

            JOptionPane.showMessageDialog(this,"Enter the Product ID");

        }
//        else if(textField4.getText().equals("")||textField4.getText().length()>=30||textField4.getText().matches(".*[0-9].*")){
//
//            JOptionPane.showMessageDialog(this, "Enter correct product name");

//        }
//        get the name from database
        else if(textField5.getText().equals("")||textField5.getText().matches(".*[a-z].*")||textField5.getText().equals("0")){

            JOptionPane.showMessageDialog(this,"Enter the correct Weight");

        }
//        else if(textField6.getText().equals("")||textField6.getText().matches(".*[a-z].*")||textField6.getText().equals("0")){
//
//            JOptionPane.showMessageDialog(this,"Enter the correct Price");
//
//        }
//        get the price from the database
        else{
            pPrice = determinePrice(pID);
            String query = "SELECT * FROM product_data WHERE product_data.id="+pID;
            String DB_URL = "jdbc:mysql://localhost:3306/data1";
         String USER = "root";
         String PASS = "ssneeraj23";
            Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
             Statement stmt = conn.createStatement();
            ResultSet resultSet = stmt.executeQuery(query);
            int row = 0,totalAmount=0;
            boolean flag = true;

            if(resultSet.next()){
                if (resultSet.getInt("prod_weight") > Integer.parseInt(pWeight)){
                    JOptionPane.showMessageDialog(this,"Sorry the weight of the item is incorrect");
                }
                else {
                    pQuantity = String.valueOf(Integer.parseInt(pWeight)/resultSet.getInt("prod_weight"));

                    while (tableModel.getValueAt(row, 0) != null) {

                        if(pID.equals(tableModel.getValueAt(row,1))){
                            pWeight = String.valueOf(Integer.parseInt(pWeight)+Integer.parseInt(String.valueOf(tableModel.getValueAt(row,3))));
                            pQuantity = String.valueOf(Integer.parseInt(pQuantity)+Integer.parseInt(String.valueOf(tableModel.getValueAt(row,4))));
                            if (Integer.parseInt(resultSet.getString("units_left")) < Integer.parseInt(pQuantity)) {
                                JOptionPane.showMessageDialog(this, "Sorry the inventory doesn't contain the quantity you require!");
                            }else{
                                tableModel.setValueAt(pWeight,row,3);
                                tableModel.setValueAt(pQuantity,row,4);

                                tableModel.setValueAt(Integer.parseInt(pQuantity)*Integer.parseInt(pPrice),row,6);
                            }
                           flag = false;
                        }
                        totalAmount += Integer.parseInt(String.valueOf(tableModel.getValueAt(row, 6)));
                        row++;
                    }

                    //checking if quantity is enough in inventory
//                query = "SELECT * FROM product_data WHERE product_data.id = "+pID;
//                resultSet = statement.executeQuery(query);

                    if(flag){
                        if (Integer.parseInt(resultSet.getString("units_left")) < Integer.parseInt(pQuantity)) {
                            JOptionPane.showMessageDialog(this, "Sorry the inventory doesn't contain the quantity you require!");
                        } else {
                            tableModel.insertRow(row,new Object[] {row+1,resultSet.getString("id"),resultSet.getString("prod_name"),pWeight,pQuantity,pPrice,Integer.parseInt(pQuantity) * Integer.parseInt(pPrice)});
//                            tableModel.setValueAt(row+1,row,0);
//                            tableModel.setValueAt(resultSet.getString("id"), row, 1);
//                            tableModel.setValueAt(resultSet.getString("name"), row, 2);
//                            tableModel.setValueAt(pWeight,row,3);
//                            tableModel.setValueAt(pQuantity, row, 4);
//                      pPrice = resultSet.getString("unit_price");
                            // if you want to sell at cost price uncomment above line
//                            tableModel.setValueAt(pPrice, row, 5);
//                            tableModel.setValueAt(Integer.parseInt(pQuantity) * Integer.parseInt(pPrice), row, 6);

                            totalAmount += Integer.parseInt(String.valueOf(tableModel.getValueAt(row, 6)));
                            jTextField1.setText(String.valueOf(totalAmount));
                        }
                    }else{
                        jTextField1.setText(String.valueOf(totalAmount));
                    }

                }
            }else{
                JOptionPane.showMessageDialog(this,"Enter the correct product id");
            }
            resultSet.close();
            stmt.close();
            conn.close();
        }


    }

    private void jButton1ActionPerformed(ActionEvent evt) throws SQLException {
        jLabel3.setText(String.valueOf(java.time.LocalDate.now()));
        jLabel5.setText(String.valueOf(java.time.LocalTime.now()));
        String pName = textField1.getText();
        String pContactNo = textField2.getText();
        int pID;
        String pProductName;
        int pQuantity;
        int pPrice;
        int pTotal;
        String query = "SELECT * FROM customer_data WHERE cust_name=\""+pName+"\" AND customer_data.mobile_no=\""+pContactNo+"\"";
            String DB_URL = "jdbc:mysql://localhost:3306/data1";
         String USER = "root";
         String PASS = "ssneeraj23";
            Connection conn = DriverManager.getConnection(DB_URL, USER, PASS);
             Statement stmt = conn.createStatement();
        ResultSet resultSet = stmt.executeQuery(query);
        if(!resultSet.next()){
            query = "INSERT INTO customer_data(cust_name,mobile_no) VALUES(\""+textField1.getText()+"\",\""+textField2.getText()+"\");";
            PreparedStatement preparedStmt = conn.prepareStatement(query);
            preparedStmt.execute();
            preparedStmt.close();
        }
        if(!jTextField2.getText().equals("")){
            if(Integer.parseInt(jTextField2.getText())<Integer.parseInt(jTextField1.getText())){
                JOptionPane.showMessageDialog(this,"Pay the remaining amount");
            }else{
                jTextField3.setText(String.valueOf(Integer.parseInt(jTextField2.getText())-Integer.parseInt(jTextField1.getText())));
                int row = 0;
                while(tableModel.getValueAt(row,0)!=null){

                    pID = Integer.parseInt(String.valueOf(tableModel.getValueAt(row,1)));
                    pProductName = String.valueOf((tableModel.getValueAt(row,2)));
                    pQuantity = Integer.parseInt(String.valueOf(tableModel.getValueAt(row,4)));
                    pPrice = Integer.parseInt(String.valueOf(tableModel.getValueAt(row,5)));
                    pTotal = Integer.parseInt(String.valueOf(tableModel.getValueAt(row,6)));
                    query = "INSERT INTO selling_history(productid,no_of_units,selling_price,amount_realised,date) VALUES("+pID+","+pQuantity+","+pPrice+","+pTotal+",CURRENT_DATE())";
                    PreparedStatement preparedStmt = conn.prepareStatement(query);
                    preparedStmt.execute();
                    query = "SELECT units_left FROM product_data WHERE product_data.id = "+pID;
                    resultSet = stmt.executeQuery(query);
                    if(resultSet.next()){
                            query = "UPDATE product_data SET units_left = "+(Integer.parseInt(resultSet.getString("units_left"))-pQuantity)+" WHERE product_data.id ="+pID;
                            preparedStmt.execute(query);
                    }else{
                        JOptionPane.showMessageDialog(this,"There is problem in database");
                    }
                    preparedStmt.close();
                    row++;
                }
            }
        }else{
            JOptionPane.showMessageDialog(this,"Please enter the Amount Paid");
        }
        resultSet.close();
        stmt.close();
        conn.close();
    }

    private void textField6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_textField6ActionPerformed
        // TODO add your handling code here:
//        System.out.println("HELLO");
    }//GEN-LAST:event_textField6ActionPerformed

    /**
     * @param args the command line arguments
     */


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button button1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField2;
    private javax.swing.JTextField jTextField3;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private java.awt.Label label3;
    private java.awt.Label label4;
    private java.awt.Label label5;
    private java.awt.Label label6;
    private java.awt.Label label7;
    private java.awt.Label label8;
    private java.awt.TextField textField1;
    private java.awt.TextField textField2;
    private java.awt.TextField textField3;
    private java.awt.TextField textField4;
    private java.awt.TextField textField5;
    private java.awt.TextField textField6;
    // End of variables declaration//GEN-END:variables
}
